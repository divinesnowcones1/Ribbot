function animateHW11(x, dt)
% x: collection of state vectors at each time, similar to output from ode45
% dt: (difference in time between each row of xout, generated by calling
% ode45 with the argument [tstart:dt:tfinal];)
close all;
set(0, 'DefaultAxesFontSize', 24);
set(0, 'DefaultLineMarkerSize', 10);
set(0,'defaultfigurecolor',[1 1 1]);
set(0,'DefaultAxesXGrid','off','DefaultAxesYGrid','off')
set(groot,'defaulttextinterpreter','latex');
set(groot, 'defaultAxesTickLabelInterpreter','latex');
set(groot, 'defaultLegendInterpreter','latex');

syms l1 l2 l3 l4m1 l4m2 l5m1 l5m2 l6

bRecord = 0;  % Uncomment this to save a video
if bRecord
    % Define video recording parameters
    Filename = 'current_animation';
    v = VideoWriter(Filename, 'MPEG-4');
    myVideo.Quality = 100;
    open(v);
end

% Define axis window
xmin = -4;
xmax = 4;
ymin = -4;
ymax = 4;

Fig = figure('Color', 'w');

% Create trace of trajectory and particle object
h = animatedline('LineStyle', ':', 'LineWidth', 1.5);
manipulator = [];
endeffector = [];
floor = [];

% Set up axes
axis equal
axis([xmin xmax ymin ymax])
xlabel('x')
ylabel('y')

% draw
base = [0;0];
L = 1;






for ii = 1:length(x)
    a = tic;
    
    set(gcf,'DoubleBuffer','on');
    
    q2 = x(ii,1);
    q3 = x(ii,2);
    q4 = x(ii,3);
    q5 = x(ii,4);
    q6 = x(ii,5);
    x0 = x(ii,6);
    y0 = x(ii,7);
    q0 = x(ii,8);
    
    gps2 = [cos(q0) -sin(q0) 0 x0;sin(q0) cos(q0) 0 y0;0 0 1 0;0 0 0 1]*[1 0 0 -l4m2;0 1 0 0;0 0 1 0;0 0 0 1];
    gs25 = [cos(q5) -sin(q5) 0 0; sin(q5) cos(q5) 0 0; 0 0 1 0; 0 0 0 1]*[1 0 0 l5m1+l5m2;0 1 0 0;0 0 1 0;0 0 0 1];
    g56t = [cos(q6) -sin(q6) 0 0; sin(q6) cos(q6) 0 0; 0 0 1 0; 0 0 0 1]*[1 0 0 l6;0 1 0 0;0 0 1 0;0 0 0 1];
    gps1 = [cos(q0) -sin(q0) 0 x0;sin(q0) cos(q0) 0 y0;0 0 1 0;0 0 0 1]*[1 0 0 l4m1;0 1 0 0;0 0 1 0;0 0 0 1];
    gs13 = [cos(q4) -sin(q4) 0 0; sin(q4) cos(q4) 0 0; 0 0 1 0; 0 0 0 1]*[1 0 0 l3;0 1 0 0;0 0 1 0;0 0 0 1];
    g32 = [cos(q3) -sin(q3) 0 0; sin(q3) cos(q3) 0 0; 0 0 1 0; 0 0 0 1]*[1 0 0 -l2;0 1 0 0;0 0 1 0;0 0 0 1];
    g21t = [cos(q2) -sin(q2) 0 0; sin(q2) cos(q2) 0 0; 0 0 1 0; 0 0 0 1]*[1 0 0 l1;0 1 0 0;0 0 1 0;0 0 0 1];
    d
    gp3 = gps1*gs13;
    gp2 = gp3*g32;
    gp1 = gp2*g21t;
    gp5 = gps2*gs25;
    gp6 = gp5*g56t;
    
    joint1 = [gp1(1,4);gp1(2,4)];
    joint2 = [gp2(1,4);gp2(2,4)];
    joint3 = [gp3(1,4);gp3(2,4)];
    joint4 = [gps1(1,4) gps2(1,4);gps1(2,4) gps2(2,4)];
    joint5 = [gp5(1,4);gp5(2,4)];
    joint6 = [gp6(1,4);gp6(2,4)];

    joint1d = subs(joint1,[l1 l2 l3 l4m1 l4m2 l5m1 l5m2 l6 q1 q2 q3 q4 q5 q6 q7], [L,Q]);
    joint2d = subs(joint2,[l1 l2 l3 l4m1 l4m2 l5m1 l5m2 l6 q1 q2 q3 q4 q5 q6 q7], [L,Q]);
    joint3d = subs(joint3,[l1 l2 l3 l4m1 l4m2 l5m1 l5m2 l6 q1 q2 q3 q4 q5 q6 q7], [L,Q]);
    joint4d = subs(joint4,[l1 l2 l3 l4m1 l4m2 l5m1 l5m2 l6 q1 q2 q3 q4 q5 q6 q7], [L,Q]);
    joint5d = subs(joint5,[l1 l2 l3 l4m1 l4m2 l5m1 l5m2 l6 q1 q2 q3 q4 q5 q6 q7], [L,Q]);
    joint6d = subs(joint6,[l1 l2 l3 l4m1 l4m2 l5m1 l5m2 l6 q1 q2 q3 q4 q5 q6 q7], [L,Q]);

    delete(manipulator);
    delete(endeffector);
    delete(floor);
    floor = line([xmin,xmax],[0,0],'Color',[0;0;0]);
    manipulator = line([joint1(1), joint2(1) joint3(1) joint4(1,:)], [joint1(2), joint2(2)], 'Color', [0;0;0],'LineStyle','-');
    endeffector = line(joint2(1), joint2(2), 'Color', [1;0;0],'Marker','.', 'MarkerSize', 20);
    addpoints(h,joint2(1), joint2(2));
    
    drawnow limitrate
    
    if bRecord
        frame = getframe(gcf);
        writeVideo(v,frame);
    else
        pause(dt - toc(a)); % waits if drawing frame took less time than anticipated
    end
end

if bRecord
    close(v);
end